// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: instagram/instagram.proto

package instagram

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// InstagramClient is the client API for Instagram service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InstagramClient interface {
	// rpc GetProfile(GetProfileRequest) returns (GetProfileResponse);
	GetFollowersInfo(ctx context.Context, in *GetFollowersInfoRequest, opts ...grpc.CallOption) (*GetFollowersInfoResponse, error)
}

type instagramClient struct {
	cc grpc.ClientConnInterface
}

func NewInstagramClient(cc grpc.ClientConnInterface) InstagramClient {
	return &instagramClient{cc}
}

func (c *instagramClient) GetFollowersInfo(ctx context.Context, in *GetFollowersInfoRequest, opts ...grpc.CallOption) (*GetFollowersInfoResponse, error) {
	out := new(GetFollowersInfoResponse)
	err := c.cc.Invoke(ctx, "/instagram.Instagram/GetFollowersInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InstagramServer is the server API for Instagram service.
// All implementations must embed UnimplementedInstagramServer
// for forward compatibility
type InstagramServer interface {
	// rpc GetProfile(GetProfileRequest) returns (GetProfileResponse);
	GetFollowersInfo(context.Context, *GetFollowersInfoRequest) (*GetFollowersInfoResponse, error)
	mustEmbedUnimplementedInstagramServer()
}

// UnimplementedInstagramServer must be embedded to have forward compatible implementations.
type UnimplementedInstagramServer struct {
}

func (UnimplementedInstagramServer) GetFollowersInfo(context.Context, *GetFollowersInfoRequest) (*GetFollowersInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowersInfo not implemented")
}
func (UnimplementedInstagramServer) mustEmbedUnimplementedInstagramServer() {}

// UnsafeInstagramServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InstagramServer will
// result in compilation errors.
type UnsafeInstagramServer interface {
	mustEmbedUnimplementedInstagramServer()
}

func RegisterInstagramServer(s grpc.ServiceRegistrar, srv InstagramServer) {
	s.RegisterService(&Instagram_ServiceDesc, srv)
}

func _Instagram_GetFollowersInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFollowersInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServer).GetFollowersInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instagram.Instagram/GetFollowersInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServer).GetFollowersInfo(ctx, req.(*GetFollowersInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Instagram_ServiceDesc is the grpc.ServiceDesc for Instagram service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Instagram_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "instagram.Instagram",
	HandlerType: (*InstagramServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFollowersInfo",
			Handler:    _Instagram_GetFollowersInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "instagram/instagram.proto",
}
